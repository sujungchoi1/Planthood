{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sujungchoi/Desktop/Coding/MERN/Full_Stack_MERN/planthood/client/src/components/PlantForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link, navigate } from '@reach/router';\nimport { Button, Form } from 'semantic-ui-react';\nimport axios from 'axios';\nimport './PlantForm.css'; // import ImageUploader from 'react-images-upload';\n\nimport ImageUploading from \"react-images-uploading\";\nimport { MdAddAPhoto } from \"react-icons/md\"; // eslint-disable-next-line\n\nexport default _s(props => {\n  _s();\n\n  const {\n    onSubmitProp,\n    errors\n  } = props; //keep track of what is being typed via useState hook\n\n  const [name, setName] = useState(\"\");\n  const [scientificName, setScientificName] = useState(\"\");\n  const [nickname, setNickname] = useState(\"\");\n  const [dateAdopted, setDateAdopted] = useState(\"\");\n  const [light, setLight] = useState(\"\");\n  const [water, setWater] = useState(\"\");\n  const [info, setInfo] = useState(\"\");\n  const [images, setImages] = useState([]);\n  const maxNumber = 69;\n\n  const onChange = (imageList, addUpdateIndex) => {\n    // data for submit\n    console.log(imageList, addUpdateIndex);\n    setImages(imageList);\n  }; // const [errors, setErrors] = useState([]);\n  //handler when the form is submitted\n\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    onSubmitProp({\n      name,\n      nickname,\n      scientificName,\n      dateAdopted,\n      images,\n      light,\n      water,\n      info\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contentForm\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: onSubmitHandler,\n      children: [errors.map((err, index) => /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          \"color\": \"orange\"\n        },\n        children: [\" \", err, \" \"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 45\n      }, this)), /*#__PURE__*/_jsxDEV(Form.Group, {\n        widths: \"equal\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n          fluid: true,\n          label: \"Nickname (*required)\",\n          type: \"text\",\n          onChange: e => setNickname(e.target.value),\n          value: nickname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n          fluid: true,\n          label: \"Name\",\n          type: \"text\",\n          onChange: e => setName(e.target.value),\n          value: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n          fluid: true,\n          label: \"Scientific Name\",\n          type: \"text\",\n          onChange: e => setScientificName(e.target.value),\n          value: scientificName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        className: \"dateForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date Adopted:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          onChange: e => setDateAdopted(e.target.value),\n          value: dateAdopted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        className: \"dropdownForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Light:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => setLight(e.target.value),\n          name: \"select\",\n          value: light,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"default\",\n            children: \"Please select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"low\",\n            children: \"low\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"medium\",\n            children: \"medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"high\",\n            children: \"high\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        className: \"dropdownForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Water:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => setWater(e.target.value),\n          name: \"select\",\n          value: water,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"default\",\n            children: \"Please select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"low\",\n            children: \"low\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"medium\",\n            children: \"medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"high\",\n            children: \"high\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ImageUploading, {\n        multiple: true,\n        value: images,\n        onChange: onChange,\n        maxNumber: maxNumber,\n        dataURLKey: \"data_url\",\n        children: ({\n          imageList,\n          onImageUpload,\n          isDragging,\n          dragProps\n        }) =>\n        /*#__PURE__*/\n        // write your building UI\n        _jsxDEV(\"div\", {\n          className: \"upload__image-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            className: \"ui blue basic button\",\n            style: isDragging ? {\n              color: \"red\"\n            } : null,\n            onClick: onImageUpload // onChange={(e) => setImages(e.target.value)} value={images}\n            ,\n            ...dragProps,\n            children: [/*#__PURE__*/_jsxDEV(MdAddAPhoto, {\n              style: {\n                \"fontSize\": \"25px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"imageButton\",\n              children: \"Click here to uplad your plant photo \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, this), \"\\xA0\", imageList.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: image.data_url,\n              alt: \"\",\n              width: \"100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image-item__btn-wrapper\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.TextArea, {\n        className: \"textArea\",\n        label: \"About\",\n        placeholder: \"Anything else you want to add?\",\n        onChange: e => setInfo(e.target.value),\n        value: info\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"yellow large\",\n        style: {\n          \"marginTop\": \"10px\"\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}, \"UTOkjiaywuh12wJrel6uH+6ilb4=\");","map":{"version":3,"sources":["/Users/sujungchoi/Desktop/Coding/MERN/Full_Stack_MERN/planthood/client/src/components/PlantForm.jsx"],"names":["React","useState","Link","navigate","Button","Form","axios","ImageUploading","MdAddAPhoto","props","onSubmitProp","errors","name","setName","scientificName","setScientificName","nickname","setNickname","dateAdopted","setDateAdopted","light","setLight","water","setWater","info","setInfo","images","setImages","maxNumber","onChange","imageList","addUpdateIndex","console","log","onSubmitHandler","e","preventDefault","map","err","index","target","value","onImageUpload","isDragging","dragProps","color","image","data_url"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link, navigate } from '@reach/router';\nimport { Button, Form } from 'semantic-ui-react';\nimport axios from 'axios';\nimport './PlantForm.css';\n// import ImageUploader from 'react-images-upload';\nimport ImageUploading from \"react-images-uploading\";\nimport { MdAddAPhoto } from \"react-icons/md\";\n\n// eslint-disable-next-line\nexport default (props) => {\n    const { onSubmitProp, errors } = props;\n    //keep track of what is being typed via useState hook\n    const [name, setName] = useState(\"\");\n    const [scientificName, setScientificName] = useState(\"\");\n    const [nickname, setNickname] = useState(\"\");\n    const [dateAdopted, setDateAdopted] = useState(\"\");\n    const [light, setLight] = useState(\"\");\n    const [water, setWater] = useState(\"\");\n    const [info, setInfo] = useState(\"\");\n    const [images, setImages] = useState([]);\n    const maxNumber = 69;\n\n    const onChange = (imageList, addUpdateIndex) => {\n        // data for submit\n        console.log(imageList, addUpdateIndex);\n        setImages(imageList);\n    };\n\n    // const [errors, setErrors] = useState([]);\n    //handler when the form is submitted\n\n    const onSubmitHandler = (e) => {\n        e.preventDefault();\n        onSubmitProp({ name, nickname, scientificName, dateAdopted, images, light, water, info });\n    }\n\n\n\n    return (\n        <div className=\"contentForm\">\n            <Form onSubmit={onSubmitHandler}>\n                {errors.map((err, index) => <h3 style={{ \"color\": \"orange\" }} key={index}> {err} </h3>)}\n                <Form.Group widths='equal'>\n                    <Form.Input fluid label='Nickname (*required)' type=\"text\" onChange={(e) => setNickname(e.target.value)} value={nickname} />\n                    <Form.Input fluid label='Name' type=\"text\" onChange={(e) => setName(e.target.value)} value={name} />\n                    <Form.Input fluid label='Scientific Name' type=\"text\" onChange={(e) => setScientificName(e.target.value)} value={scientificName} />\n                </Form.Group>\n                <Form.Field className=\"dateForm\">\n                    <label>Date Adopted:</label>\n                    <input type=\"date\" onChange={(e) => setDateAdopted(e.target.value)} value={dateAdopted} />\n                </Form.Field>\n                <Form.Field className=\"dropdownForm\">\n                <label>Light:</label>\n                <select onChange={(e)=>setLight(e.target.value)} name=\"select\" value={light} >\n                    <option value=\"default\" >Please select</option>\n                    <option value=\"low\" >low</option>\n                    <option value=\"medium\" >medium</option>\n                    <option value=\"high\">high</option>\n                </select>\n                </Form.Field >\n                <Form.Field className=\"dropdownForm\">\n                <label>Water:</label>\n                <select onChange={(e)=>setWater(e.target.value)} name=\"select\" value={water} >\n                    <option value=\"default\" >Please select</option>\n                    <option value=\"low\" >low</option>\n                    <option value=\"medium\" >medium</option>\n                    <option value=\"high\">high</option>\n                </select>\n                </Form.Field>\n                {/* DOESN:T WORK (react image upload)\n                <div className=\"imageUploader\">\n                <ImageUploader\n                type=\"file\"\n                withIcon={true}\n                buttonText='Choose images'\n                onChange={(e) => setPicture(e.target.value[0])} value={picture}\n                imgExtension={['.jpg', '.gif', '.png', '.gif']}\n                maxFileSize={5242880}\n                /> </div> */}\n                <ImageUploading\n                    multiple\n                    value={images}\n                    onChange={onChange}\n                    maxNumber={maxNumber}\n                    dataURLKey=\"data_url\"\n                >\n                    {({\n                        imageList,\n                        onImageUpload,\n                        isDragging,\n                        dragProps\n                    }) => (\n                        // write your building UI\n                        <div className=\"upload__image-wrapper\">\n                            {/* <label>Click here to upload a picture of your plant</label> */}\n                            <Button className=\"ui blue basic button\"\n                                style={isDragging ? { color: \"red\" } : null}\n                                onClick={onImageUpload}\n                                // onChange={(e) => setImages(e.target.value)} value={images}\n                                {...dragProps}\n                            >\n                                <MdAddAPhoto style={{\"fontSize\": \"25px\"}}/>\n                                <span className=\"imageButton\">Click here to uplad your plant photo </span>\n            </Button>\n            &nbsp;\n                            {imageList.map((image, index) => (\n                                <div key={index} className=\"image-item\">\n                                    <img src={image.data_url} alt=\"\" width=\"100\" />\n                                    <div className=\"image-item__btn-wrapper\">\n                                    </div>\n                                </div>\n                            ))}\n                        </div>\n                    )}\n                </ImageUploading>\n                <Form.TextArea className=\"textArea\" label='About' placeholder='Anything else you want to add?' onChange={(e) => setInfo(e.target.value)} value={info} />\n                <Button className=\"yellow large\" style={{ \"marginTop\": \"10px\" }}>Submit</Button>\n            </Form>\n\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}