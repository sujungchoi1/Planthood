{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sujungchoi/Desktop/Coding/MERN/Full_Stack_MERN/planthood/client/src/views/LandingPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from '@reach/router';\nimport { Button, Form } from 'semantic-ui-react'; // import SearchBox from '../components/SearchBox';\n// import Search from '../components/Search';\n\nimport axios from 'axios';\nimport Header from '../components/Header';\nimport './LandingPage.css';\nimport SearchBox from '../components/SearchBox';\n\nconst LandingPage = props => {\n  _s();\n\n  const [plants, setPlants] = useState([]);\n  const [search, setSearch] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(null); // const getPlants = () => {\n  //     axios.get(`https://cors-anywhere.herokuapp.com/https://trefle.io/api/v1/species/search?q=${search}&token=wfOfrblXggceP_xcDAcmmxDOO4XmIyJY1KgXKK0_utA`)\n  //         .then(res => {\n  //             if (res.data.data.length > 0) {\n  //                 setPlants(res.data.data);\n  //                 console.log(res.data);\n  //             } else {\n  //                 console.log(\"error message\");\n  //                 setErrorMessage(\"Please try another keyword.\");\n  //             }\n  //         })\n  // }\n  // const searchPlants = (e) => {\n  //     e.preventDefault();\n  //     getPlants();\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"landingDisplay\",\n      children: [/*#__PURE__*/_jsxDEV(SearchBox, {\n        plants: plants,\n        setPlants: setPlants\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), errorMessage ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          \"color\": \"red\"\n        },\n        children: [\" \", errorMessage, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 33\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list\",\n        children: plants.map((value, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"plantList\",\n            plant: value,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"plantApiImage\",\n              width: \"150\",\n              height: \"150\",\n              src: value.image_url,\n              alt: value.common_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"plantListDetail\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"common name: \", value.common_name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"scientific name: \", value.scientific_name, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LandingPage, \"hQh2yXPfyJrTQQkjTX+NLsEBpbM=\");\n\n_c = LandingPage;\nexport default LandingPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LandingPage\");","map":{"version":3,"sources":["/Users/sujungchoi/Desktop/Coding/MERN/Full_Stack_MERN/planthood/client/src/views/LandingPage.jsx"],"names":["React","useEffect","useState","Link","Button","Form","axios","Header","SearchBox","LandingPage","props","plants","setPlants","search","setSearch","errorMessage","setErrorMessage","map","value","index","image_url","common_name","scientific_name"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,eAArB;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,mBAA7B,C,CACA;AACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAO,mBAAP;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAE3B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACa,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,IAAD,CAAhD,CAJ2B,CAO3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACI,QAAC,SAAD;AAAW,QAAA,MAAM,EAAES,MAAnB;AAA2B,QAAA,SAAS,EAAEC;AAAtC;AAAA;AAAA;AAAA;AAAA,cADJ,EAeKG,YAAY,gBAAG;AAAK,QAAA,KAAK,EAAE;AAAE,mBAAS;AAAX,SAAZ;AAAA,wBAAkCA,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,GAA4D,IAf7E,eAiBI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,kBACKJ,MAAM,CAACM,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC1B,8BACI;AAAK,YAAA,SAAS,EAAC,WAAf;AAA2B,YAAA,KAAK,EAAED,KAAlC;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,eAAf;AAA+B,cAAA,KAAK,EAAC,KAArC;AAA2C,cAAA,MAAM,EAAC,KAAlD;AAAwD,cAAA,GAAG,EAAEA,KAAK,CAACE,SAAnE;AAA8E,cAAA,GAAG,EAAEF,KAAK,CAACG;AAAzF;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAK,cAAA,SAAS,EAAC,iBAAf;AAAA,sCACI;AAAA,4CAAkBH,KAAK,CAACG,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA,gDAAsBH,KAAK,CAACI,eAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA,aAA8CH,KAA9C;AAAA;AAAA;AAAA;AAAA,kBADJ;AAQH,SATA;AADL;AAAA;AAAA;AAAA;AAAA,cAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqCH,CA/DD;;GAAMV,W;;KAAAA,W;AAiEN,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from '@reach/router';\nimport { Button, Form } from 'semantic-ui-react';\n// import SearchBox from '../components/SearchBox';\n// import Search from '../components/Search';\nimport axios from 'axios';\nimport Header from '../components/Header';\nimport './LandingPage.css'\nimport SearchBox from '../components/SearchBox';\n\nconst LandingPage = (props) => {\n\n    const [plants, setPlants] = useState([]);\n    const [search, setSearch] = useState([]);\n    const [errorMessage, setErrorMessage] = useState(null);\n\n\n    // const getPlants = () => {\n    //     axios.get(`https://cors-anywhere.herokuapp.com/https://trefle.io/api/v1/species/search?q=${search}&token=wfOfrblXggceP_xcDAcmmxDOO4XmIyJY1KgXKK0_utA`)\n    //         .then(res => {\n    //             if (res.data.data.length > 0) {\n    //                 setPlants(res.data.data);\n    //                 console.log(res.data);\n    //             } else {\n    //                 console.log(\"error message\");\n    //                 setErrorMessage(\"Please try another keyword.\");\n    //             }\n    //         })\n    // }\n\n    // const searchPlants = (e) => {\n    //     e.preventDefault();\n    //     getPlants();\n    // };\n\n\n    return (\n        <div className=\"wrapper\">\n            <Header />\n            <div className=\"landingDisplay\">\n                <SearchBox plants={plants} setPlants={setPlants} />\n                {/* <h2>Wanna learn more about your plants?</h2>\n                <Form className=\"searchBox\">\n                    <Form.Group>\n                        <Form.Input\n                            placeholder='ex) parlor palm'\n                            name='name'\n                            value={search}\n                            onChange={(e) => setSearch(e.target.value)}\n                        />\n                        <Button onClick={searchPlants} className=\"ui yellow basic button\" content='SEARCH' />\n                    </Form.Group> </Form> */}\n\n\n                {errorMessage ? <div style={{ \"color\": \"red\" }}> {errorMessage} </div> : null}\n\n                <div className=\"list\">\n                    {plants.map((value, index) => {\n                        return (\n                            <div className=\"plantList\" plant={value} key={index} >\n                                <img className=\"plantApiImage\" width=\"150\" height=\"150\" src={value.image_url} alt={value.common_name}></img>\n                                <div className=\"plantListDetail\">\n                                    <h3>common name: {value.common_name}</h3>\n                                    <h3>scientific name: {value.scientific_name} </h3>\n                                </div>\n                            </div>)\n                    })}\n                </div>\n\n            </div>\n        </div>\n\n    )\n}\n\nexport default LandingPage"]},"metadata":{},"sourceType":"module"}