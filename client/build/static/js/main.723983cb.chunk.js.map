{"version":3,"sources":["components/Header.jsx","views/Search.jsx","components/PlantForm.jsx","views/Create.jsx","views/Main.jsx","views/PlantDetail.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","to","className","Button","style","Search","props","useState","plants","setPlants","search","setSearch","errorMessage","setErrorMessage","Form","Group","Input","placeholder","name","value","onChange","e","target","onClick","preventDefault","axios","get","then","res","data","length","console","log","catch","err","content","Grid","columns","divided","map","index","Row","Column","plant","width","height","src","image_url","alt","common_name","scientific_name","family_common_name","onSubmitProp","errors","setName","scientificName","setScientificName","nickname","setNickname","dateAdopted","setDateAdopted","light","setLight","water","setWater","info","setInfo","image","setImage","images","setImages","onSubmit","widths","fluid","label","type","Field","multiple","imageList","addUpdateIndex","maxNumber","dataURLKey","onImageUpload","isDragging","dragProps","color","data_url","TextArea","setErrors","post","navigate","errorResponse","response","errorArr","Object","keys","key","push","message","Main","myPlants","setMyPlants","useEffect","PlantDetail","setPlant","loaded","setLoaded","id","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.723983cb.chunk.js","sourcesContent":["import React from \"react\";\nimport { Button } from 'semantic-ui-react';\nimport { Link } from '@reach/router';\nimport { RiPlantLine } from \"react-icons/ri\";\nimport './Header.css';\nimport {GiMonsteraLeaf, GiLindenLeaf} from \"react-icons/gi\";\n\nconst Header = () => {\n\n    return (\n        <header>\n                <Link to={'/'}>\n            <div className=\"leftHeader\">\n                <h1>Planthood</h1>\n                <h1 className=\"icon\"><RiPlantLine /></h1>\n            </div>\n                </Link>\n            <div className=\"button\">\n                <Button className=\"ui green basic button large\"><Link style={{ \"color\": \"green\" }} to={\"/search\"}><GiLindenLeaf/> search plants</Link></Button>\n            </div>\n        </header>\n    )\n}\n\nexport default Header;","import React, { useEffect, useState } from 'react';\nimport { Link } from '@reach/router';\nimport { Button, Form, Grid } from 'semantic-ui-react';\nimport { BsDot } from \"react-icons/bs\";\n// import SearchBox from '../components/SearchBox';\n// import Search from '../components/Search';\nimport axios from 'axios';\nimport Header from '../components/Header';\nimport './Search.css'\n// import SearchBox from '../components/SearchBox';\n\nconst Search = (props) => {\n\n    const [plants, setPlants] = useState([]);\n    const [search, setSearch] = useState([]);\n    const [errorMessage, setErrorMessage] = useState(null);\n\n\n    const getPlants = () => {\n        axios.get(`https://cors-anywhere.herokuapp.com/https://trefle.io/api/v1/species/search?q=${search}&token=wfOfrblXggceP_xcDAcmmxDOO4XmIyJY1KgXKK0_utA`)\n            .then(res => {\n                if (res.data.data.length > 0) {\n                    setPlants(res.data.data);\n                    console.log(res.data);\n                } else {\n                    console.log(\"error message\");\n                    setErrorMessage(\"Please try another keyword.\");\n                }\n            })\n            .catch(err => { console.log(err); })\n    }\n\n    const searchPlants = (e) => {\n        e.preventDefault();\n        getPlants();\n    };\n\n\n    return (\n        <div className=\"wrapper\">\n            <Header />\n            <div className=\"landingDisplay\">\n                {/* <SearchBox /> */}\n                <h2>Got a new plant?</h2>\n                <Form className=\"searchBox\">\n                    <Form.Group>\n                        <Form.Input\n                            placeholder='ex) parlor palm'\n                            name='name'\n                            value={search}\n                            onChange={(e) => setSearch(e.target.value)}\n                        />\n                        <Button onClick={searchPlants} style={{\"backgroundColor\": \"#fff19c\"}} content='SEARCH' />\n                    </Form.Group> </Form>\n\n\n                {errorMessage ? <div style={{ \"color\": \"red\" }}> {errorMessage} </div> : null}\n\n                <div className=\"list\">\n                    <Grid columns={3} divided>\n                    {plants.map((value, index) => {\n                        return (\n                            <div>\n                            <Grid.Row>\n                            <Grid.Column>\n                            <div className=\"plantList\" plant={value} key={index} >\n                                {/* <Link to={`/detail/${value.id}`}><img className=\"plantApiImage\" width=\"150\" height=\"150\" src={value.image_url} alt={value.common_name}></img></Link> */}\n                                <img className=\"plantApiImage\" width=\"150\" height=\"150\" src={value.image_url} alt={value.common_name}></img>\n                                <div className=\"plantListDetail\">\n                                    <h3><BsDot/>Common Name: <span>{value.common_name}</span></h3>\n                                    <h3><BsDot/>Scientific Name: <span>{value.scientific_name}</span> </h3>\n                                    <h3><BsDot/>Family Name: <span>{value.family_common_name}</span> </h3>\n                                </div>\n                            </div>\n                            </Grid.Column>\n                            </Grid.Row>\n                            </div>                       \n                        )\n                    })}\n                    </Grid>\n                </div>\n\n            </div>\n        </div>\n\n    )\n}\n\nexport default Search;","import React, { useState } from 'react';\nimport { Link, navigate } from '@reach/router';\nimport { Button, Form } from 'semantic-ui-react';\nimport axios from 'axios';\nimport './PlantForm.css';\n// import ImageUploader from 'react-images-upload';\nimport ImageUploading from \"react-images-uploading\";\nimport { MdAddAPhoto } from \"react-icons/md\";\n\n// eslint-disable-next-line\nexport default (props) => {\n    const { onSubmitProp, errors } = props;\n    //keep track of what is being typed via useState hook\n    const [name, setName] = useState(\"\");\n    const [scientificName, setScientificName] = useState(\"\");\n    const [nickname, setNickname] = useState(\"\");\n    const [dateAdopted, setDateAdopted] = useState(\"\");\n    const [light, setLight] = useState(\"\");\n    const [water, setWater] = useState(\"\");\n    const [info, setInfo] = useState(\"\");\n    const [image, setImage] = useState(\"\");\n    const [images, setImages] = useState([]);\n    const maxNumber = 69;\n\n    const onChange = (imageList, addUpdateIndex) => {\n        // data for submit\n        console.log(imageList, addUpdateIndex);\n        setImages(imageList);\n    };\n\n    // const [errors, setErrors] = useState([]);\n    //handler when the form is submitted\n\n    const onSubmitHandler = (e) => {\n        e.preventDefault();\n        onSubmitProp({ name, nickname, scientificName, dateAdopted, images, light, water, info, image });\n    }\n\n\n\n    return (\n        <div className=\"contentForm\">\n            <Form onSubmit={onSubmitHandler}>\n                {errors.map((err, index) => <h3 style={{ \"color\": \"orange\" }} key={index}> {err} </h3>)}\n                <Form.Group widths='equal'>\n                    <Form.Input fluid label='Nickname (*required)' type=\"text\" onChange={(e) => setNickname(e.target.value)} value={nickname} />\n                    <Form.Input fluid label='Name' type=\"text\" onChange={(e) => setName(e.target.value)} value={name} />\n                    <Form.Input fluid label='Scientific Name' type=\"text\" onChange={(e) => setScientificName(e.target.value)} value={scientificName} />\n                </Form.Group>\n                <Form.Field className=\"dateForm\">\n                    <label>Date Adopted:</label>\n                    <input type=\"date\" onChange={(e) => setDateAdopted(e.target.value)} value={dateAdopted} />\n                </Form.Field>\n                <Form.Field className=\"dropdownForm\">\n                <label>Light:</label>\n                <select onChange={(e)=>setLight(e.target.value)} name=\"select\" value={light} >\n                    <option value=\"default\" >Please select</option>\n                    <option value=\"low\" >low</option>\n                    <option value=\"medium\" >medium</option>\n                    <option value=\"high\">high</option>\n                </select>\n                </Form.Field >\n                <Form.Field className=\"dropdownForm\">\n                <label>Water:</label>\n                <select onChange={(e)=>setWater(e.target.value)} name=\"select\" value={water} >\n                    <option value=\"default\" >Please select</option>\n                    <option value=\"low\" >low</option>\n                    <option value=\"medium\" >medium</option>\n                    <option value=\"high\">high</option>\n                </select>\n                </Form.Field>\n                {/* DOESN:T WORK (react image upload)\n                <div className=\"imageUploader\">\n                <ImageUploader\n                type=\"file\"\n                withIcon={true}\n                buttonText='Choose images'\n                onChange={(e) => setPicture(e.target.value[0])} value={picture}\n                imgExtension={['.jpg', '.gif', '.png', '.gif']}\n                maxFileSize={5242880}\n                /> </div> */}\n\n                <ImageUploading\n                    multiple\n                    value={images}\n                    onChange={onChange}\n                    maxNumber={maxNumber}\n                    dataURLKey=\"data_url\"\n                >\n                    {({\n                        imageList,\n                        onImageUpload,\n                        isDragging,\n                        dragProps\n                    }) => (\n                        // write your building UI\n                        <div className=\"upload__image-wrapper\">\n                            {/* <label>Click here to upload a picture of your plant</label> */}\n                            <Button className=\"ui blue basic button\"\n                                style={isDragging ? { color: \"red\" } : null}\n                                onClick={onImageUpload}\n                                // onChange={(e) => setImages(e.target.value)} value={images}\n                                {...dragProps}\n                            >\n                                <MdAddAPhoto style={{\"fontSize\": \"25px\"}}/>\n                                <span className=\"imageButton\">Click here to uplad your plant photo </span>\n            </Button>\n            &nbsp;\n                            {imageList.map((image, index) => (\n                                <div key={index} className=\"image-item\">\n                                    <img src={image.data_url} alt=\"\" width=\"100\" />\n                                    <div className=\"image-item__btn-wrapper\">\n                                    </div>\n                                </div>\n                            ))}\n                        </div>\n                    )}\n                </ImageUploading>\n                <Form.Field className=\"imageUrl\">\n                    <label>image url:</label>\n                    <input type=\"text\" onChange={(e) => setImage(e.target.value)} value={image} />\n                </Form.Field>\n                <Form.Field className=\"imageUrl\">\n                    <label>IMAGES?</label>\n                    <input type=\"file\" onChange={(e) => setImage(e.target.value)} value={image} />\n                </Form.Field>\n                <Form.TextArea className=\"textArea\" label='About' placeholder='Anything else you want to add?' onChange={(e) => setInfo(e.target.value)} value={info} />\n                <Button className=\"yellow large\" style={{ \"marginTop\": \"10px\" }}>Submit</Button>\n            </Form>\n\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport { Link, navigate } from '@reach/router';\nimport axios from 'axios';\nimport PlantForm from '../components/PlantForm';\nimport './Create.css';\nimport Header from '../components/Header';\n\n// eslint-disable-next-line\nexport default () => {\n    const [plants, setPlants] = useState([]);\n    const [errors, setErrors] = useState([]);\n\n    const createPlant = (plant) => {\n        axios.post('http://localhost:8050/api/plants/new', plant)\n            .then(res => {\n                console.log(res)\n                navigate(\"/\")\n            })\n            .catch(err => {\n                console.log(err)\n                const errorResponse = err.response.data.errors;\n                const errorArr = [];\n                for (const key of Object.keys(errorResponse)) {\n                    errorArr.push(errorResponse[key].message)\n                }\n                setErrors(errorArr);\n            })\n    }\n\n\n    return (\n        <div className=\"wrapper\">\n            <Header />\n            <div className=\"plantForm\">\n                <h2>Add a new plant !</h2>\n                {/* {errors.map((err, index) => <p style={{\"color\": \"orange\"}} key={index}> {err} </p>)} */}\n                <PlantForm onSubmitProp={createPlant} errors={errors} />\n            </div>\n        </div>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Link } from '@reach/router';\nimport { Button, Form, Grid } from 'semantic-ui-react';\nimport { BsDot } from \"react-icons/bs\";\n// import SearchBox from '../components/SearchBox';\n// import Search from '../components/Search';\nimport axios from 'axios';\nimport Header from '../components/Header';\nimport './Main.css'\n// import SearchBox from '../components/SearchBox';\n\nconst Main = (props) => {\n\n    const [myPlants, setMyPlants] = useState([]);\n\n\n    useEffect(()=>{\n        axios.get(\"http://localhost:8050/api/plants\")\n            .then(res=>{\n                setMyPlants(res.data)\n            })  \n            .catch(err=>console.log(\"Error: \", err))     \n    }, [])\n\n\n\n    return (\n        <div className=\"wrapper\">\n            <Header />\n            <div className=\"landingDisplay\">\n                {/* <SearchBox /> */}\n                <h2>Got a new plant?</h2>\n                <Link to=\"/new\"><Button className=\"yellow large\" content='Add them to your plant log!' /></Link>\n\n                <div className=\"divider\"></div>\n\n                <div className=\"list\">\n                    <h2>Plants added so far:</h2>\n\n                    <Grid columns={3} divided>\n                    {myPlants.map((value, index) => {\n                        return (\n                            <div>\n                            <Grid.Row>\n                            <Grid.Column>\n                            <div className=\"plantList\" plant={value} key={index} >\n                                {/* <Link to={`/detail/${value.id}`}><img className=\"plantApiImage\" width=\"150\" height=\"150\" src={value.image_url} alt={value.common_name}></img></Link> */}\n                                <img className=\"plantApiImage\" width=\"190\" height=\"190\" src={value.image} alt={value.common_name}></img>\n                                <div className=\"plantListDetail\">\n                                    <h3><BsDot/>Nickname: <span>{value.nickname}</span></h3>\n                                    <h3><BsDot/>Common Name: <span>{value.name}</span> </h3>\n                                </div>\n                            </div>\n                            </Grid.Column>\n                            </Grid.Row>\n                            </div>                       \n                        )\n                    })}\n                    </Grid>\n                </div>\n\n            </div>\n        </div>\n\n    )\n}\n\nexport default Main;","import React, { useEffect, useState } from \"react\";\nimport Header from '../components/Header';\nimport './PlantDetail.css';\nimport axios from 'axios';\nimport './PlantDetail.css';\n\nconst PlantDetail = (props) => {\n\n    const [plant, setPlant] = useState();\n    const [loaded, setLoaded] = useState(false);\n\n    useEffect(() => {\n        axios.get(`http://localhost:8050/api/plants/${props.id}`)\n            .then(res => {\n                setPlant(res.data)\n                setLoaded(true);\n            })\n            .catch(err => console.log(err));\n    }, [])\n\n    return (\n        <div className=\"wrapper\">\n            <Header />\n            {loaded && (\n                <div className=\"plantDetail\">\n                    <h1>{plant.nickname}</h1>\n                    <div className=\"plantDetailContent\">\n                        <img src={plant.image} alt=\"\" width=\"200\" />\n                        <div className=\"plantDetailContentRight\">\n                        <h4>common name: {plant.name}</h4>\n                        <h4>scientific name: {plant.scientificName}</h4>\n                        <h4>water: {plant.water}</h4>\n                        <h4>light: {plant.light}</h4>\n                        <h4>desc: {plant.info}</h4>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default PlantDetail;","import React from 'react';\nimport { Router } from '@reach/router';\nimport './App.css';\nimport Search from './views/Search';\nimport Create from './views/Create';\nimport Main from './views/Main';\nimport PlantDetail from './views/PlantDetail';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Router>\n       <Main path='/' />\n       <Search path=\"/search\"/>\n       <Create path=\"/new\" />\n       <PlantDetail path=\"/detail/:id\" />\n     </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}